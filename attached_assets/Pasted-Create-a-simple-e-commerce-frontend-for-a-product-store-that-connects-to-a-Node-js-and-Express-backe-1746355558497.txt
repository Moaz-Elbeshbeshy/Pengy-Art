Create a simple e-commerce frontend for a product store that connects to a Node.js and Express backend with Mongoose for managing products. The backend provides an API endpoint for fetching products with filtering, sorting, and pagination. The frontend should allow users to browse products, filter them by various criteria, sort them, and handle pagination.

Key Features:
Product Display:

Show products in a grid layout with their name, price, size options (S, M, L, XL), color options, and brand.

Fetch the products from the backend API (GET /api/v1/products).

Filter Sidebar:

Allow users to filter products by:

Price: Implement a price range filter (min, max price).

Size: Filter by size (S, M, L, XL).

Color: Filter by color (Purple, Blue, Black, White, Red, Pink, Green, Brown).

Brand: Filter by brand (e.g., Converse, Nike).

Each filter should send an updated request to the backend API with the selected criteria (using query parameters like company, numericFilters, etc.).

Sorting:

Allow users to sort the products by:

Price: Low to High / High to Low.

Name: Alphabetical (A-Z / Z-A).

Sort the products based on the selected option.

Search Bar:

Implement a search bar that allows users to search for products by name.

Dynamically filter products by name based on the search input.

Pagination:

Display products in pages with navigation controls (Previous, Next, and page numbers).

Implement pagination with a page query parameter that fetches products based on the current page.

API Integration:
The frontend should make API requests to the backend, including query parameters for filters, sorting, and pagination:

Filters: featured, company, name, price, rating, etc.

Sorting: sort (e.g., price, name).

Pagination: page, limit.

Search: name.

Design:
Keep the layout simple and clean, with a sidebar on the left for filters and a main content area on the right to display products.

The page should be responsive for desktop and mobile views.

Make sure to use React (or any frontend framework you prefer) to manage state and handle API calls to the backend.